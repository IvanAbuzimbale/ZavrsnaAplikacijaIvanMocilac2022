<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUpisi.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>